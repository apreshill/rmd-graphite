---
title: "Formats"
layout: standard
description: R Markdown formats from RStudio
---


```{r include=FALSE}
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
library(rvest)
library(tidyverse)
library(reactable)
```

```{r}
# function for making tables

make_tbl <- function(type) {
  df_type <- 
    df %>% 
    dplyr::filter({{type}} == TRUE) 
  #df_type <- df
  df_type %>% 
    dplyr::select(link, desc) %>% 
    reactable(
      onClick = JS("function(rowInfo, colInfo, index) {
                 window.open(rowInfo.row['link'], '_blank')
                 }
                 "
                 ),
      
      # global reactable options
      highlight = TRUE,
      rowStyle = list(cursor = "pointer"),
      theme = reactableTheme(
        highlightColor = "#e6f3fc"),
      
      # formatting individual columns
      columns = list(
        # Using htmltools to render a link
        link = colDef(cell = function(value, index) {
          htmltools::tags$a(href = value, target = "_blank", df_type$name[index])
        },
        name = "",
        minWidth = 50),
        desc = colDef(name = "")
      )
    )
}
```


```{r}
# scraping the current website
webpage <- read_html("https://rmarkdown.rstudio.com/formats.html")
names <- html_nodes(webpage, "div.formatTable a.formatTableRow div.formatName") %>%
  html_text()
links <- html_nodes(webpage, "div.formatTable a.formatTableRow") %>% html_attr('href')
desc <- html_nodes(webpage, "div.formatTable a.formatTableRow div.formatDescription") %>%
  html_text()
```

```{r}
# a taxonomy
page <- c("Notebook", "HTML", "distill", "flexdashboard", "pagedown")
doc <- c("PDF", "Word", "ODT", "RTF", "Markdown", "pagedown", "rticles")
prez <- c("ioslides", "reveal.js", "Slidy", "Beamer", "PowerPoint")
site <- c("distill", "bookdown", "blogdown", "Websites")
print <- c("bookdown", "pagedown", "Word", "PowerPoint", "Tufte Handout")
pkg <- c("pkgdown", "Package Vignette", "Github Document")
int <- c("flexdashboard", "learnr", "htmlwidgets", "shiny")

df <- names %>% 
  bind_cols(links) %>% 
  bind_cols(desc) %>% 
  purrr::set_names(c("name", "link", "desc")) %>% 
  mutate(page = if_else(name %in% page, TRUE, FALSE),
         doc  = if_else(name %in% doc, TRUE, FALSE),
         prez = if_else(name %in% prez, TRUE, FALSE),
         site = if_else(name %in% site, TRUE, FALSE),
         print= if_else(name %in% print, TRUE, FALSE),
         pkg  = if_else(name %in% pkg, TRUE, FALSE),
         int  = if_else(name %in% int, TRUE, FALSE)) 
```

{{% columns class=twocols %}}
{{% column name=even-left %}}

### Documents

```{r}
# make the table
make_tbl(type = page)
```

{{% /column %}}
{{% column name=even-right %}}

### Presentations

```{r}
make_tbl(type = prez)
```

{{% /column %}}
{{% /columns %}}

{{% columns class=twocols %}}
{{% column name=even-left %}}

### Webpages

```{r}
make_tbl(type = page)
```

{{% /column %}}

{{% column name=even-right %}}

### Websites

```{r}
make_tbl(type = site)
```

{{% /column %}}
{{% /columns %}}

{{% columns class=twocols %}}
{{% column name=even-left %}}

### Package Documentation

```{r}
make_tbl(type = pkg)
```

{{% /column %}}

{{% column name=even-right %}}
### Printable pages

```{r}
# make the table
make_tbl(type = print)
```

{{% /column %}}
{{% /columns %}}


